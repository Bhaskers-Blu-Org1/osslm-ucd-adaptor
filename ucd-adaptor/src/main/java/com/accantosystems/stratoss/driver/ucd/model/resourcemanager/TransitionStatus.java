package com.accantosystems.stratoss.driver.ucd.model.resourcemanager;

import java.time.OffsetDateTime;
import java.util.Map;
import java.util.TreeMap;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

@ApiModel
@JsonInclude(value=JsonInclude.Include.NON_EMPTY, content=JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown=true)
public class TransitionStatus {

	@ApiModelProperty(position=1, example="80fc4a66-7e92-41f8-b4bb-7cb98193f5fa", value="Id to uniquely identify this request within the Resource Manager")
	private String requestId;
	@ApiModelProperty(position=2, example="FAILED", value="Enumerated value indicating the current state of this request")
	private State requestState;
	@ApiModelProperty(position=3, example="Transition timed out after 600 seconds", required=false, value="Optional string to give more information as to the current state of this request, e.g. to indicate what error has occurred in failure scenarios")
	private String requestStateReason;
	@ApiModelProperty(position=4, example="default-rm://c675e0bd-9c6c-43ca-84bf-2c061d439c6b", required=false, value="Unique identifier for the resource, as generated by the Resource Manager")
	private String resourceId;
	@ApiModelProperty(position=5, required=false, value="Optional date and time this transition was started", example="2017-05-01T12:00:00Z")
	private OffsetDateTime startedAt;
	@ApiModelProperty(position=6, required=false, value="Optional date and time this transition was completed", example="2017-05-01T12:00:05Z")
	private OffsetDateTime finishedAt;
	@ApiModelProperty(position=7, required=false, value="Optional map of context properties for this request")
	private final Map<String, String> context = new TreeMap<>();
	
	public String getRequestId() {
		return requestId;
	}
	public void setRequestId(String requestId) {
		this.requestId = requestId;
	}
	public State getRequestState() {
		return requestState;
	}
	public void setRequestState(State requestState) {
		this.requestState = requestState;
	}
	public String getRequestStateReason() {
		return requestStateReason;
	}
	public void setRequestStateReason(String requestStateReason) {
		this.requestStateReason = requestStateReason;
	}
	public String getResourceId() {
		return resourceId;
	}
	public void setResourceId(String resourceId) {
		this.resourceId = resourceId;
	}
	public OffsetDateTime getStartedAt() {
		return startedAt;
	}
	public void setStartedAt(OffsetDateTime startedAt) {
		this.startedAt = startedAt;
	}
	public OffsetDateTime getFinishedAt() {
		return finishedAt;
	}
	public void setFinishedAt(OffsetDateTime finishedAt) {
		this.finishedAt = finishedAt;
	}
	public Map<String, String> getContext() {
		return context;
	}

	public enum State {
		PENDING,
		IN_PROGRESS,
		COMPLETED,
		CANCELLED,
		FAILED;
	}
	
}
