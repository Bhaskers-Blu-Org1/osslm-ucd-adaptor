{
  "document": "heat_template_version: 2013-05-23\n\ndescription: >\n  Created 3/10/17 by ucdpadmin. For Cloud admin@Black_Tower\n\nparameters:\n  flavor:\n    type: string\n    description: 'Flavor to be used for compute instance'\n    default: m1.small\n  key_name:\n    type: string\n    description: 'For most clouds, the name of the key-pair to be used for the compute instance; for VMware clouds, the contents of the public SSH key for the compute instance'\n  availability_zone:\n    type: string\n    description: 'Name of availability zone in which to create the instance'\n    default: 'nova'\n  server_name:\n    type: string\n    description: the name of the service to be created\n    default: 'Streamer'\n#  referenced-management-network-name:\n#    type: string\n#    description: The name of the management network\n  referenced-video-network:\n    type: string\n    description: 'Generated to reference a network'\n    label: Referenced Video Network\n  referenced-security-group:\n    type: string\n    description: 'Generated to reference a security group'\n    label: Referenced Security Group\n    default: 'default'\n  network-id__for__referenced-management-network:\n    type: string\n    description: 'Generated to reference ''referenced-management-network'' network.'\n    default: 'referenced-management-network'\n  ucd_server_url:\n    type: string\n    description: 'The server URL for agent communication to UrbanCode Deploy. Do *not* add a trailing slash.'\n    default: 'https://10.220.216.91:8443'\n  ucd_user:\n    type: string\n    description: 'The user credential for the UrbanCode Deploy server.'\n    default: 'admin'\n  ucd_password:\n    type: string\n    description: 'The user credential for the UrbanCode Deploy server.'\n    hidden: true\n  ucd_relay_url:\n    type: string\n    description: 'The server URL for an agent relay - leave as ''None'' to enable agents to communicate with server directly.'\n    default: 'None'\nparameter_groups:\n    - { label: 'Agent Parameters', parameters: [ucd_password, ucd_relay_url, ucd_server_url, ucd_user] }\n    - { label: 'Image Parameters', parameters: [flavor, key_name] }\n    - { label: 'Network Parameters', parameters: [availability_zone, network-id__for__referenced-management-network, referenced-video-network] }\n    - { label: 'Security Parameters', parameters: [referenced-security-group] }\nresources:\n## REFERENCE {\"referenced-video-network\":{\"type\": \"OS::Neutron::Net\", \"properties\": {\"network_id\": \"referenced-video-network\"}}}\n\n## REFERENCE {\"referenced-management-network\":{\"type\": \"OS::Neutron::Net\", \"properties\": {\"network_id\": \"referenced-management-network\"}}}\n\n  xenial:\n    type: OS::Nova::Server\n    properties:\n      user_data: {get_resource: xenial_mime}\n      user_data_format: RAW\n      networks:\n          - port: { get_resource: referenced-management-network__port  }\n          - port: { get_resource: referenced-video-network__port  }\n      name: \"xenial\"\n      image: \"51ed7069-b3e2-4429-8381-89f1ff9f3b7d\" # xenial\n      flavor: { get_param: flavor }\n      key_name: { get_param: key_name }\n      availability_zone: { get_param: availability_zone }\n      metadata: \n        \"__os_type__\" : \"Linux\"\n        ### metering ###\n\n\n    \n\n  xenial_mime:\n    type: OS::Heat::MultipartMime\n    properties:\n      parts:\n        - config: { get_resource: ucd_agent_install_linux }\n          subtype: \"x-shellscript\"\n\n  d_streamer_component:\n    type: IBM::UrbanCode::SoftwareDeploy::UCD\n    properties:\n      apply_config: { get_resource: d_streamer_component_sw_config }\n      server: xenial\n      version: LATEST\n      agent_timeout: \"360\"\n\n  d_streamer_component_sw_config:\n    type: IBM::UrbanCode::SoftwareConfig::UCD\n    properties: \n      name: \"d_streamer_component\"\n      component_process: \"Install\"\n      component_process_timeout: \"300\"\n      ucd_server_url: { get_param: ucd_server_url } # these should come from resource_tree\n      ucd_username: { get_param: ucd_user }\n      ucd_password: { get_param: ucd_password }\n      application: { get_attr: [resource_tree, application_name] }\n      environment_name: { get_attr: [resource_tree, environment_name] }\n\n  referenced-management-network__port:\n    type: OS::Neutron::Port\n    properties:\n      network_id: { get_param: network-id__for__referenced-management-network }\n      replacement_policy: AUTO   #TODO remove this if using HEAT version Icehouse!\n\n  referenced-video-network__port:\n    type: OS::Neutron::Port\n    properties:\n      network_id: { get_param: referenced-video-network }\n      replacement_policy: AUTO   #TODO remove this if using HEAT version Icehouse!\n\n\n\n  resource_tree:\n    type: IBM::UrbanCode::ResourceTree\n    properties:\n       urbancode_deploy_url: { get_param: ucd_server_url }\n       username: { get_param: ucd_user }\n       password: { get_param: ucd_password }\n       team_mappings: \n       application: d_streamer_application\n       base_resource_group: \n\n  ucd_agent_install_linux:\n    type: OS::Heat::SoftwareConfig\n    properties:\n      config:\n        str_replace:\n          template: |\n            #!/usr/bin/env bash\n            #ifconfig eth0 mtu 1454 ## Optionally patch the MTU\n            export PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/root/bin\n            arch=`uname -ms | awk '{print tolower($0)}' | tr \" \" \"-\" `\n            agent_archive=ibm-ucd-agent-$arch.tgz\n            if [ \"_ucd_relay_url_\" != \"None\" ]; then\n              proxy_args=\"--proxy _ucd_relay_url_:20080\"\n              ucd_remote_host=_ucd_relay_url_\n              agent_args=\"-r -d\"\n              ucd_jms_port=7916\n            else\n              proxy_args=\n              agent_args=\n              ucd_remote_host=_ucd_server_url_\n              ucd_jms_port=7918\n            fi\n            if command -V apt-get && ! command -V curl; then apt-get -y install curl; fi\n            if command -V yum && ! command -V curl; then yum -y install curl; fi\n            curl $proxy_args -Lk --retry 10 --retry-delay 10 --retry-max-time 120 -o /tmp/$agent_archive -u _ucd_user_:_ucd_password_ \"_ucd_server_url_/cli/version/downloadArtifacts?component=ucd-agent-$arch&version=_agent_version_&singleFilePath=$agent_archive\"\n            tar xfz /tmp/$agent_archive -C /tmp\n            /tmp/ibm-ucd-agent-install/install-agent-with-options.sh -t \"_agent_team_\" -p $ucd_jms_port -s $ucd_remote_host $agent_args -x start -v -n _agent_name_\n          params:\n            _agent_name_:\n               str_replace:\n                  template: |\n                    \"_application_name_._environment_name_\"\n                  params:\n                    _application_name_: { get_attr: [resource_tree, application_name ] }\n                    _environment_name_: { get_param: \"OS::stack_name\" }\n            _ucd_server_url_: { get_param: ucd_server_url }\n            _ucd_relay_url_: { get_param: ucd_relay_url }\n            _ucd_user_ : { get_param: ucd_user }\n            _ucd_password_ : { get_param: ucd_password }\n            _agent_version_ : 7.1\n            _agent_team_ : \"\"\n\noutputs:\n  blueprint_url:\n    description: Blueprint Origin URL\n    value:  https://10.220.216.92:8443/landscaper/view/projects?open=ucdpadmin_00000000_0000_0000_0000_000000000002-OrionContent/Internal-Team/c_streamer.yml\n  privateIp:\n    description: IpAddress of server\n    value: { get_attr: [referenced-video-network__port, fixed_ips, 0, ip_address ] }\n  mgmtIp:\n    description: MGMT IpAddress of server\n    value: { get_attr: [referenced-management-network__port, fixed_ips, 0, ip_address ] }\n\n\n",
  "location": "/landscaper/orion/file/ucdpadmin_00000000_0000_0000_0000_000000000002-OrionContent/Internal-Team/c_streamer.yaml",
  "id": "c_streamer",
  "name": "c_streamer",
  "version": "1.0",
  "url": "https://10.220.216.92:8443/landscaper/view/projects?open=c_streamer"
}